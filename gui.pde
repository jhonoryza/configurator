/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void createButton_click(GButton source, GEvent event) { //_CODE_:createButton:826417:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
  saveToFile();
} //_CODE_:createButton:826417:

public void filenameField_change(GTextField source, GEvent event) { //_CODE_:filenameField:411127:
  println("textfield1 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:filenameField:411127:

public void apnField_change(GTextField source, GEvent event) { //_CODE_:apnField:664105:
  println("textfield2 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:apnField:664105:

public void idField_change(GTextField source, GEvent event) { //_CODE_:idField:807461:
  println("textfield3 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:idField:807461:

public void browseButton_click(GButton source, GEvent event) { //_CODE_:browseButton:841935:
  println("button2 - GButton >> GEvent." + event + " @ " + millis());
  browseFolder();
} //_CODE_:browseButton:841935:

public void smtpNameField_change(GTextField source, GEvent event) { //_CODE_:smtpNameField:416077:
  println("textfield1 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:smtpNameField:416077:

public void smtpPortField_change(GTextField source, GEvent event) { //_CODE_:smtpPortField:410372:
  println("textfield2 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:smtpPortField:410372:

public void smtpUserField_change(GTextField source, GEvent event) { //_CODE_:smtpUserField:896613:
  println("textfield3 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:smtpUserField:896613:

public void smtpPassField_change(GTextField source, GEvent event) { //_CODE_:smtpPassField:376997:
  println("textfield4 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:smtpPassField:376997:

public void emailServerField_change(GTextField source, GEvent event) { //_CODE_:emailServerField:454061:
  println("textfield5 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:emailServerField:454061:

public void emailDeviceField_change(GTextField source, GEvent event) { //_CODE_:emailDeviceField:335339:
  println("textfield6 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:emailDeviceField:335339:

public void gsmPeriodeField_change(GTextField source, GEvent event) { //_CODE_:gsmPeriodeField:737834:
  println("textfield7 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:gsmPeriodeField:737834:

public void gsmServerField_change(GTextField source, GEvent event) { //_CODE_:gsmServerField:286266:
  println("textfield8 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:gsmServerField:286266:

public void gsmSV1Field_change(GTextField source, GEvent event) { //_CODE_:gsmSV1Field:425932:
  println("textfield9 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:gsmSV1Field:425932:

public void gsmSV2Field_change(GTextField source, GEvent event) { //_CODE_:gsmSV2Field:447438:
  println("textfield10 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:gsmSV2Field:447438:

public void gsmSV3Field_change(GTextField source, GEvent event) { //_CODE_:gsmSV3Field:476306:
  println("textfield11 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:gsmSV3Field:476306:

public void tempMaxField_change(GTextField source, GEvent event) { //_CODE_:tempMaxField:592136:
  println("textfield12 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:tempMaxField:592136:

public void tempMinField_change(GTextField source, GEvent event) { //_CODE_:tempMinField:800740:
  println("textfield13 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:tempMinField:800740:

public void rhMaxField_change(GTextField source, GEvent event) { //_CODE_:rhMaxField:904626:
  println("textfield14 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:rhMaxField:904626:

public void rhMinField_change(GTextField source, GEvent event) { //_CODE_:rhMinField:446360:
  println("textfield15 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:rhMinField:446360:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Create Configuration File");
  title = new GLabel(this, 410, 10, 80, 20);
  title.setText("Text Creator");
  title.setOpaque(false);
  createButton = new GButton(this, 770, 270, 80, 20);
  createButton.setText("Create");
  createButton.addEventHandler(this, "createButton_click");
  filenameField = new GTextField(this, 130, 50, 300, 20, G4P.SCROLLBARS_NONE);
  filenameField.setOpaque(true);
  filenameField.addEventHandler(this, "filenameField_change");
  filenameLabel = new GLabel(this, 30, 50, 80, 20);
  filenameLabel.setText("filename");
  filenameLabel.setOpaque(false);
  idLabel = new GLabel(this, 30, 110, 80, 20);
  idLabel.setText("device id");
  idLabel.setOpaque(false);
  apnField = new GTextField(this, 130, 80, 300, 20, G4P.SCROLLBARS_NONE);
  apnField.setOpaque(true);
  apnField.addEventHandler(this, "apnField_change");
  ketLabel = new GLabel(this, 480, 230, 400, 30);
  ketLabel.setLocalColorScheme(GCScheme.RED_SCHEME);
  ketLabel.setOpaque(false);
  apnLabel = new GLabel(this, 30, 80, 80, 20);
  apnLabel.setText("Apn");
  apnLabel.setOpaque(false);
  idField = new GTextField(this, 130, 110, 300, 20, G4P.SCROLLBARS_NONE);
  idField.setOpaque(true);
  idField.addEventHandler(this, "idField_change");
  browseButton = new GButton(this, 650, 270, 80, 20);
  browseButton.setText("Browse");
  browseButton.setLocalColorScheme(GCScheme.RED_SCHEME);
  browseButton.addEventHandler(this, "browseButton_click");
  selectLabel = new GLabel(this, 500, 270, 120, 20);
  selectLabel.setText("select folder / drive");
  selectLabel.setLocalColorScheme(GCScheme.RED_SCHEME);
  selectLabel.setOpaque(false);
  smtpNameLabel = new GLabel(this, 30, 140, 80, 20);
  smtpNameLabel.setText("smtp server");
  smtpNameLabel.setOpaque(false);
  smtpNameField = new GTextField(this, 130, 140, 300, 20, G4P.SCROLLBARS_NONE);
  smtpNameField.setOpaque(true);
  smtpNameField.addEventHandler(this, "smtpNameField_change");
  smtpPortLabel = new GLabel(this, 30, 170, 80, 20);
  smtpPortLabel.setText("smtp port");
  smtpPortLabel.setOpaque(false);
  smtpPortField = new GTextField(this, 130, 170, 300, 20, G4P.SCROLLBARS_NONE);
  smtpPortField.setOpaque(true);
  smtpPortField.addEventHandler(this, "smtpPortField_change");
  smtpUserField = new GTextField(this, 130, 200, 300, 20, G4P.SCROLLBARS_NONE);
  smtpUserField.setOpaque(true);
  smtpUserField.addEventHandler(this, "smtpUserField_change");
  smtpUserLabel = new GLabel(this, 30, 200, 80, 20);
  smtpUserLabel.setText("smtp user");
  smtpUserLabel.setOpaque(false);
  smtpPassLabel = new GLabel(this, 30, 230, 80, 20);
  smtpPassLabel.setText("smtp pass");
  smtpPassLabel.setOpaque(false);
  emailServerLabel = new GLabel(this, 30, 260, 80, 20);
  emailServerLabel.setText("email server");
  emailServerLabel.setOpaque(false);
  emailDeviceLabel = new GLabel(this, 30, 290, 80, 20);
  emailDeviceLabel.setText("email device");
  emailDeviceLabel.setOpaque(false);
  smtpPassField = new GTextField(this, 130, 230, 300, 20, G4P.SCROLLBARS_NONE);
  smtpPassField.setOpaque(true);
  smtpPassField.addEventHandler(this, "smtpPassField_change");
  emailServerField = new GTextField(this, 130, 260, 300, 20, G4P.SCROLLBARS_NONE);
  emailServerField.setOpaque(true);
  emailServerField.addEventHandler(this, "emailServerField_change");
  emailDeviceField = new GTextField(this, 130, 290, 300, 20, G4P.SCROLLBARS_NONE);
  emailDeviceField.setOpaque(true);
  emailDeviceField.addEventHandler(this, "emailDeviceField_change");
  periodeLabel = new GLabel(this, 30, 320, 80, 20);
  periodeLabel.setText("gsm periode");
  periodeLabel.setOpaque(false);
  gsmPeriodeField = new GTextField(this, 130, 320, 300, 20, G4P.SCROLLBARS_NONE);
  gsmPeriodeField.setOpaque(true);
  gsmPeriodeField.addEventHandler(this, "gsmPeriodeField_change");
  gsmServerLabel = new GLabel(this, 30, 350, 80, 20);
  gsmServerLabel.setText("gsm server");
  gsmServerLabel.setOpaque(false);
  gsmServerField = new GTextField(this, 130, 350, 300, 20, G4P.SCROLLBARS_NONE);
  gsmServerField.setOpaque(true);
  gsmServerField.addEventHandler(this, "gsmServerField_change");
  gsmSV1Label = new GLabel(this, 30, 380, 80, 20);
  gsmSV1Label.setText("gsm sv-1");
  gsmSV1Label.setOpaque(false);
  gsmSV1Field = new GTextField(this, 130, 380, 300, 20, G4P.SCROLLBARS_NONE);
  gsmSV1Field.setOpaque(true);
  gsmSV1Field.addEventHandler(this, "gsmSV1Field_change");
  gsmSV2Label = new GLabel(this, 480, 50, 80, 20);
  gsmSV2Label.setText("gsm sv-2");
  gsmSV2Label.setOpaque(false);
  gsmSV2Field = new GTextField(this, 580, 50, 300, 20, G4P.SCROLLBARS_NONE);
  gsmSV2Field.setOpaque(true);
  gsmSV2Field.addEventHandler(this, "gsmSV2Field_change");
  gsmSV3Label = new GLabel(this, 480, 80, 80, 20);
  gsmSV3Label.setText("gsm sv-3");
  gsmSV3Label.setOpaque(false);
  gsmSV3Field = new GTextField(this, 580, 80, 300, 20, G4P.SCROLLBARS_NONE);
  gsmSV3Field.setOpaque(true);
  gsmSV3Field.addEventHandler(this, "gsmSV3Field_change");
  tempMaxLabel = new GLabel(this, 480, 110, 80, 20);
  tempMaxLabel.setText("temp max");
  tempMaxLabel.setOpaque(false);
  tempMaxField = new GTextField(this, 580, 110, 300, 20, G4P.SCROLLBARS_NONE);
  tempMaxField.setOpaque(true);
  tempMaxField.addEventHandler(this, "tempMaxField_change");
  tempMinLabel = new GLabel(this, 480, 140, 80, 20);
  tempMinLabel.setText("temp min");
  tempMinLabel.setOpaque(false);
  tempMinField = new GTextField(this, 580, 140, 300, 20, G4P.SCROLLBARS_NONE);
  tempMinField.setOpaque(true);
  tempMinField.addEventHandler(this, "tempMinField_change");
  rhMaxLabel = new GLabel(this, 480, 170, 80, 20);
  rhMaxLabel.setText("rh max");
  rhMaxLabel.setOpaque(false);
  rhMaxField = new GTextField(this, 580, 170, 300, 20, G4P.SCROLLBARS_NONE);
  rhMaxField.setOpaque(true);
  rhMaxField.addEventHandler(this, "rhMaxField_change");
  rhMinLabel = new GLabel(this, 480, 200, 80, 20);
  rhMinLabel.setText("rh min");
  rhMinLabel.setOpaque(false);
  rhMinField = new GTextField(this, 580, 200, 300, 20, G4P.SCROLLBARS_NONE);
  rhMinField.setOpaque(true);
  rhMinField.addEventHandler(this, "rhMinField_change");
}

// Variable declarations 
// autogenerated do not edit
GLabel title; 
GButton createButton; 
GTextField filenameField; 
GLabel filenameLabel; 
GLabel idLabel; 
GTextField apnField; 
GLabel ketLabel; 
GLabel apnLabel; 
GTextField idField; 
GButton browseButton; 
GLabel selectLabel; 
GLabel smtpNameLabel; 
GTextField smtpNameField; 
GLabel smtpPortLabel; 
GTextField smtpPortField; 
GTextField smtpUserField; 
GLabel smtpUserLabel; 
GLabel smtpPassLabel; 
GLabel emailServerLabel; 
GLabel emailDeviceLabel; 
GTextField smtpPassField; 
GTextField emailServerField; 
GTextField emailDeviceField; 
GLabel periodeLabel; 
GTextField gsmPeriodeField; 
GLabel gsmServerLabel; 
GTextField gsmServerField; 
GLabel gsmSV1Label; 
GTextField gsmSV1Field; 
GLabel gsmSV2Label; 
GTextField gsmSV2Field; 
GLabel gsmSV3Label; 
GTextField gsmSV3Field; 
GLabel tempMaxLabel; 
GTextField tempMaxField; 
GLabel tempMinLabel; 
GTextField tempMinField; 
GLabel rhMaxLabel; 
GTextField rhMaxField; 
GLabel rhMinLabel; 
GTextField rhMinField; 